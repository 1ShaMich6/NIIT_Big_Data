COUNTER DATA ('counter.txt')
=============================

UDF - User Defined Function

(i) Create a new database called 'udf'

CREATE DATABASE udf;

USE udf;


(ii) Create a table 'testing' in the current db

CREATE TABLE testing(id STRING, unixtime STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ',';


(iii) Load 'testing' with the file 'counter.txt'

LOAD DATA LOCAL INPATH '/home/hduser/counter.txt' INTO TABLE testing;

--------------------------------------------------------

(iv) To create a UDF in Java
	1. Go to Eclipse
	2. Write your UDF (in this case - UnixTimeToDate)
	3. Add the necessary .jar files to the project
		(i) hive-exec-1.2.1.jar (/usr/local/hive/lib)
		(ii) hadoop-common-2.6.0.jar (/usr/local/hadoop/share/hadoop/common)
		(iii) commons-logging-1.1.3.jar (/usr/local/hive/lib)

	4. Export the Project as a compressed .jar file to your working directory(here, udfhive.jar)

------------------------------------------------------

(v) Now, add 'udfhive.jar' to your current Hive Database (here, udf)

ADD JAR /home/hduser/udfhive.jar;

------------------------------------------------------

(vi)
CREATE TEMPORARY FUNCTION userdate AS 'udfhive.UnixTimeToDate';

-------------------------------------------------------

(vii)
SELECT id, unixtime FROM testing;

-------------------------------------------------------

(viii)
SELECT id, userdate(unixtime) FROM testing;

/*/ This is how UDFs are implemented.
-------------------------------------------------------

